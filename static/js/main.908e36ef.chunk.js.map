{"version":3,"sources":["settingsContext.js","menu.js","index.js"],"names":["SettingsContext","React","initialState","font","animation","option","reducer","state","action","type","payload","SettingsContextProvider","props","value","dispatch","Provider","children","SettingsContextConsumer","Consumer","Menu","className","href","MenuOption","name","Component","useState","chosen","setChosen","map","t","MenuButton","active","onClick","number","useContext","useEffect","document","getElementById","style","fontFamily","num","CHOICES","FadeInAnimation","keyframes","fadeIn","FadeInDiv","styled","div","FadeInLeftAnimation","fadeInLeft","FadeInLeftDiv","FadeInUpAnimation","fadeInUp","FadeInUpDiv","AnimationDiv","InputForm","poem","defaultText","wholePoem","splitPoem","stanzas","position","isEditingPoem","currentStyle","handleChange","bind","handleSubmit","poemStyle","handleKeyDown","withStanzaMarkers","generateRandomPoem","editingStyle","handleFullScreenChange","event","this","setState","target","max","result","length","Math","floor","random","preventDefault","split","setting","splitPoemArray","reformattedArray","push","i","trim","filter","element","poemArray","addEventListener","removeEventListener","e","key","console","log","currentFormat","shouldAnimate","id","onKeyDown","onSubmit","onChange","MainBox","isFull","animationText","MenuActivate","goFull","getElementsByClassName","display","enabled","ReactDOM","render"],"mappings":"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","file":"static/js/main.908e36ef.chunk.js","sourcesContent":["import * as React from 'react';\n\nconst SettingsContext = React.createContext();\n\nlet initialState = {\n  font: \"Lusitana\",\n  animation: \"Fade\",\n  option: \"Verse-by-verse\"\n}\n\nlet reducer = (state, action) => {\n  switch (action.type) {\n    case \"FONTS\":\n      return { ...state, font: action.payload };\n    case \"ANIMATIONS\":\n      return { ...state, animation: action.payload };\n    case \"FORMATTING\":\n      return { ...state, option: action.payload };\n  }\n};\n\nfunction SettingsContextProvider(props) {\n  let [state, dispatch] = React.useReducer(reducer, initialState);\n  let value = { state, dispatch };\n\n  return (\n    <SettingsContext.Provider value={value}>{props.children}</SettingsContext.Provider>\n  );\n}\n\nlet SettingsContextConsumer = SettingsContext.Consumer;\n\n\nexport { SettingsContext, SettingsContextProvider, SettingsContextConsumer };\n\n","import React, { useState } from 'react';\n//import ReactDOM from 'react-dom';\nimport './menu.css';\n//import * as serviceWorker from './serviceWorker';\nimport { SettingsContext } from './settingsContext';\n\nclass Menu extends React.Component {\n  render() {\n    return (\n      <div className=\"menu\">\n        <div className=\"menu-headers menu-logo\">rudakeest</div>\n        <div className=\"menu-subheader\">a poetry animation service</div>\n        <div className=\"menu-subheader\">by <a href=\"https://github.com/volb\">@volb</a></div>\n\n        <MenuOption name=\"FONTS\" />\n        <MenuOption name=\"ANIMATIONS\" />\n        <MenuOption name=\"FORMATTING\" />\n      </div>\n    );\n  }\n}\n\nfunction MenuOption(props) {\n  const [chosen, setChosen] = useState(0);\n  const inline = [0, 1, 2];\n  return (\n    <div className=\"menu-option\">\n      <div className=\"menu-headers\">{props.name}</div>\n      {inline.map(t => (\n        <MenuButton\n          name={props.name}\n          active={t === chosen}\n          onClick={() => setChosen(t)}\n          number={t} />\n      ))}\n    </div>\n  );\n}\n\nfunction MenuButton(props) {\n  let { state, dispatch } = React.useContext(SettingsContext);\n\n  React.useEffect(\n    () => {\n      document.getElementById(\"input-forms\").style.fontFamily = state.font;\n    },\n    [state.font]\n  );\n  /*\n  React.useEffect(\n    () => {\n      document.getElementById(\"animated-translation\").style.display = state.includeTranslation;\n    },\n    [state.includeTranslation]\n  );\n  */\n\n  //let setFont = num => dispatch( { type: \"set-font\", payload: CHOICES[\"FONTS\"][num]});\n  function setSettings(name, num) {\n    dispatch({ type: name, payload: CHOICES[name][num] });\n    //alert(JSON.stringify(state));\n  }\n\n  function clickHandler() {\n    setSettings(props.name, props.number);\n  }\n  /*\n  return (\n    <div onClick={props.onClick} className={props.active ? \"day active\" : \"day\"}>\n      <p onClick={() => setSettings(props.name, props.number)}>{CHOICES[props.name][props.number]}</p>\n    </div>\n  );*/\n  return (\n    <div className=\"mb\" onClick={clickHandler}>\n      <div onClick={props.onClick} className={props.active ? \"day active\" : \"day\"}>\n        {CHOICES[props.name][props.number]}\n      </div>\n    </div>\n  );\n}\n\nconst CHOICES = {\n  \"FONTS\": ['Lusitana', 'Gotu', 'Inria Serif'],\n  \"ANIMATIONS\": ['Fade', 'Rise', 'Slide'],\n  \"FORMATTING\": [\"Verse-by-verse\", \"By stanza\", \"Entire text\"]\n};\n\n/* Thinking of making CHOICES more DRY */\n\n/*ReactDOM.render(<Menu />, document.getElementById('menu'));*/\nexport default Menu;\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Menu from './menu';\nimport './menu.css';\nimport './index.css';\nimport { SettingsContextProvider, SettingsContextConsumer } from './settingsContext';\n//import * as serviceWorker from './serviceWorker';\nimport { fadeIn, fadeInLeft, fadeInUp } from 'react-animations'\nimport styled, { keyframes } from 'styled-components';\nimport Fullscreen from \"react-full-screen\";\n\nconst defaultRudakiTranslation = \"I saw a hoopoe near Sarakhs\\nWhose little song reached the clouds.\\nShe was wearing a little cloak\\nOf many different colors.\\nO ugly and inverted world,\\nI stand before you in awe.\";\nconst defaultRudakiPoem = \"پوپک ديدم به حوالی سرخس\\nبانگک بر برده به ا بر اندرا\\nچادر کی ديدم رنگين برو\\nرنگ بسی گونه بر آن چادرا\\nیا پرغونه و باژگونه جهان\\nمانده من از تو به شگفت اندرا\\n\";\n\nconst FadeInAnimation = keyframes`${fadeIn}`;\nconst FadeInDiv = styled.div`\n  animation: 5s ${FadeInAnimation};\n`;\n\nconst FadeInLeftAnimation = keyframes`${fadeInLeft}`;\nconst FadeInLeftDiv = styled.div`\n  animation: 5s ${FadeInLeftAnimation};\n`;\n\n\nconst FadeInUpAnimation = keyframes`${fadeInUp}`;\nconst FadeInUpDiv = styled.div`\n  animation: 5s ${FadeInUpAnimation};\n`;\n\nfunction AnimationDiv(props) {\n  switch (props.animation) {\n    case \"Fade\":\n      return (<FadeInDiv>{props.children}</FadeInDiv>);\n    case \"Slide\":\n      return (<FadeInLeftDiv>{props.children}</FadeInLeftDiv>);\n    case \"Rise\":\n      return (<FadeInUpDiv>{props.children}</FadeInUpDiv>);\n    default:\n      return (<div>{props.children}</div>);\n  }\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\n\nclass InputForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      poem: this.props.defaultText,\n      wholePoem: [],\n      splitPoem: [],\n      stanzas: [],\n      name: props.name,\n      position: 0,\n      isEditingPoem: 0,\n      currentStyle: \"Verse-by-verse\"\n    };\n  \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.poemStyle = this.poemStyle.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.withStanzaMarkers = this.withStanzaMarkers.bind(this);\n    this.generateRandomPoem = this.generateRandomPoem.bind(this);\n    this.editingStyle = this.editingStyle.bind(this);\n    this.handleFullScreenChange = this.handleFullScreenChange.bind(this);\n\n  }\n\n  handleChange(event) {\n    this.setState({ poem: event.target.value });\n    this.setState({ isEditingPoem: 1 });\n  }\n\n  async generateRandomPoem() {\n    let response = \"poem here\";\n    let i = getRandomInt(response.result.length);\n    this.setState({ poem: response.result[0] });\n    return response;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ splitPoem: this.withStanzaMarkers(this.state.poem.split('\\n')) });\n    this.setState({ stanzas: this.state.poem.split('\\n\\n') });\n    this.setState({ wholePoem: [this.state.poem]});\n    this.setState({ isEditingPoem: 2 });\n  }\n\n  poemStyle(setting) {\n    switch (setting) {\n      case \"Verse-by-verse\":\n        return this.state.splitPoem;\n      case \"Entire text\":\n        return this.state.wholePoem;\n      case \"By stanza\":\n        return this.state.stanzas;\n      default:\n        return \"\";\n    }\n  }\n\n  editingStyle(setting) {\n    switch (setting) {\n      case 0:\n        return \"\";\n      case 1:\n        return  \"\\u22EF\";\n      case 2: \n        return \"\\u2713\";\n      default:\n        return \"\";\n    }\n  }\n\n  withStanzaMarkers(splitPoemArray) {\n    let reformattedArray = [];\n    reformattedArray.push(splitPoemArray[0]);//+\"\\n\\u2042\");\n    for (let i = 1; i < splitPoemArray.length; i++) {\n      reformattedArray[i] = splitPoemArray[i];\n    }\n    for (let i = 1; i < splitPoemArray.length; i++) {\n      if (splitPoemArray[i].trim().length === 0 && i < splitPoemArray.length - 1) {\n        reformattedArray[i+1] = splitPoemArray[i+1]+\"\\n\\u2042\";\n      }\n    }\n    var arrayWithoutBlankSlides = reformattedArray.filter(function (element) {\n      return element !== \" \" && element !== \"\";\n    });\n    return arrayWithoutBlankSlides;\n  }\n\n  poemAnimate(poemArray) {\n    for (var element of poemArray) {\n      return <div>{element}</div>\n    }\n  }\n  \n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('fullscreenchange', this.handleFullScreenChange);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.removeEventListener('fullscreenchange', this.handleFullScreenChange);\n  }\n\n  handleFullScreenChange() {\n    this.setState( {position: 0} );\n  }\n\n  handleKeyDown(e) {\n    switch (e.key) {\n      case \"ArrowLeft\":\n        if (this.state.position <= 0) {\n          console.log(\"left less\")\n          break;\n        } else {\n          this.setState( {position: this.state.position-1} );\n          console.log(\"left more\")\n          break;\n        }\n      case \"ArrowRight\":\n        if (this.state.position >= this.poemStyle(this.props.currentFormat).length-1) {\n          console.log(\"right less\")\n          break;\n        } else {\n          this.setState( {position: this.state.position+1} );\n          console.log(\"right more\")\n          break;\n        }        \n      default:\n        break;\n    }\n  }\n\n  render() {\n    if (!this.props.shouldAnimate) {\n      return (\n       /* <SettingsContextConsumer>\n          {value => {\n            return (*/\n            <div>\n              <form onSubmit={this.handleSubmit}>\n              <label className=\"enter-label\">\n                Enter the {this.state.name}:\n              </label>\n              <textarea value={this.state.poem} onChange={this.handleChange} />\n              <input className=\"button1\" type=\"submit\" value= \"Save\" /*onClick={() => this.setState( {currentStyle: value.state[\"option\"]})}*/ /> \n              <div className=\"checkmark\">{this.editingStyle(this.state.isEditingPoem)}</div>\n              </form>\n            </div>\n        /*    )}}\n        </SettingsContextConsumer>*/\n\n      );\n    } else if (this.state.poem === '') {\n      return '';\n    }\n    else if (this.props.shouldAnimate) {\n      return (\n        <SettingsContextConsumer>\n          {value => {\n            return (\n              <div id={\"animated-input\"/*this.props.name*/} onKeyDown={(e) => this.handleKeyDown(e)}>\n                <AnimationDiv animation={value.state[\"animation\"]} key={this.state.position}>\n                  {this.poemStyle(value.state[\"option\"])[this.state.position]}\n                </AnimationDiv>\n              </div>);\n          }}\n        </SettingsContextConsumer>\n      );\n    }\n  }\n}\n\nclass MainBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFull: false,\n      animationText: \"Animate\"\n    };\n\n    this.MenuActivate = this.MenuActivate.bind(this);\n    this.goFull = this.goFull.bind(this);\n  }\n\n  goFull() {\n    this.setState({ isFull: true });\n  }\n\n  MenuActivate() {\n    /* on \"Hide menu\" click, hide menu */\n    document.getElementsByClassName(\"menu\")[0].style.display = 'none';\n  }\n  \n  render() {\n    return (\n      <div id=\"main-box\">\n        <SettingsContextProvider>\n          <Menu />\n          <div className=\"container\">\n          <Fullscreen\n            enabled={this.state.isFull}\n            onChange={isFull => this.setState({ isFull })}\n          >\n            <SettingsContextConsumer>\n              {value => {\n                return (\n                  <div id={this.state.isFull ? \"fullscreen-forms\" : \"input-forms\"}>\n                  <InputForm name=\"poem\" defaultText={defaultRudakiPoem} shouldAnimate={this.state.isFull} currentFormat={value.state[\"option\"]} />\n                  <InputForm name=\"translation\" defaultText={defaultRudakiTranslation} shouldAnimate={this.state.isFull} currentFormat={value.state[\"option\"]} />\n                  </div>    \n                )\n              }}\n            </SettingsContextConsumer>\n          </Fullscreen>\n\n          <p>\n            Press Animate to go fullscreen. Use left and right arrow keys to navigate.\n          </p>\n          <div className=\"animate-button\">\n          <button className=\"button1\" onClick={this.goFull}>\n          {this.state.animationText}\n          </button>\n          </div>\n          </div>\n        </SettingsContextProvider>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<MainBox />, document.getElementById('root'));\n"],"sourceRoot":""}